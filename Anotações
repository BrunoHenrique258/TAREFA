ESTUDAR: 

boble search;
borie moorie;
"piv√¥";


VMC: 192.168.18.118

COMANDOS PARA COMMIT NO TERMINAL:

git add .
git commit -m "informa√ß√µes"
git config --global user.email "bruno.oliveira258@fatec.sp.gov.br"
git config --global user.name "BrunoHenrique258"
git pull origin
git push origin

TAREFA 1: Cores RGB - utilizando Context e Hooks

//App.ts

import React, { useState, createContext, useContext } from 'react';
import styled from 'styled-components';

const AppContainer = styled.div`
  display: flex;
  flex-direction: column;
  justify-content: center; 
  align-items: center; 
  height: 100vh; 
  background-color: white; 
`;

const ColorDisplay = styled.div`
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 30%;
  height: 150px;
  border: 1px solid magenta;
  margin-top: 20px;
  color: white;
  text-align: center; 
  border-radius: 30px;
`;

const InputsContainer = styled.div`
  display: flex; 
  justify-content: center; 
  margin: 10px 0; 
`;

const InputContainer = styled.div`
  margin: 0 10px; 
  display: flex;
  flex-direction: column; 
  align-items: center; 
`;

const StyledInput = styled.input`
  border-radius: 8px; 
  border: 1px solid white; 
  padding: 5px; 
  width: 60px; 
`;

const ColorContext = createContext<any>(null);

const ColorProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {
  const [red, setRed] = useState<number>(255);
  const [green, setGreen] = useState<number>(60);
  const [blue, setBlue] = useState<number>(214);

  return (
    <ColorContext.Provider value={{ red, setRed, green, setGreen, blue, setBlue }}>
      {children}
    </ColorContext.Provider>
  );
};

const App: React.FC = () => {
  return (
    <ColorProvider>
      <Main />
    </ColorProvider>
  );
};

const Main: React.FC = () => {
  const { red, green, blue, setRed, setGreen, setBlue } = useContext(ColorContext);

  const handleRedChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const value = Math.max(0, Math.min(255, Number(e.target.value)));
    setRed(value);
  };

  const handleGreenChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const value = Math.max(0, Math.min(255, Number(e.target.value)));
    setGreen(value);
  };

  const handleBlueChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const value = Math.max(0, Math.min(255, Number(e.target.value)));
    setBlue(value);
  };

  const backgroundColor = `rgb(${red}, ${green}, ${blue})`;

  return (
    <AppContainer>
      <ColorDisplay style={{ backgroundColor }}>
        <InputsContainer>
          <InputContainer>
            <label>Vermelho (R):</label>
            <StyledInput
              type="number"
              value={red}
              onChange={handleRedChange}
              min={0}
              max={255}
            />
          </InputContainer>
          <InputContainer>
            <label>Verde (G):</label>
            <StyledInput
              type="number"
              value={green}
              onChange={handleGreenChange}
              min={0}
              max={255}
            />
          </InputContainer>
          <InputContainer>
            <label>Azul (B):</label>
            <StyledInput
              type="number"
              value={blue}
              onChange={handleBlueChange}
              min={0}
              max={255}
            />
          </InputContainer>
        </InputsContainer>
      </ColorDisplay>
    </AppContainer>
  );
};

export default App;

TELA DE BEM-VINDO: modelo antigo 

import React, { useState } from 'react';
import styled from 'styled-components';
import logo from '../logo/logo.nutritech.png';
import logofundo from '../logo/logofundo.png';
import { useNavigate } from 'react-router-dom';

const Background = styled.div`
  display: flex;
  height: 100vh;
  background-image: url(${logofundo});
  background-size: cover;
  background-position: center;
  flex-direction: row; /* Alinhamento horizontal dos containers */
  @media (max-width: 768px) {
    flex-direction: column; /* Mudan√ßa para coluna em telas menores */
  }
`;

const ContainerRightTitle = styled.div`
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  padding: 5px;
  border-radius: 10px;
  margin-bottom: 5%;
  margin-right: 20%;

  @media (max-width: 1024px) {
    margin-right: 10%;
  }

  @media (max-width: 768px) {
    margin-right: 0;
    width: 100%;
    margin-bottom: 20px;
  }

  @media (max-width: 480px) {
    padding: 10px;
  }
`;

const Logo = styled.img`
  width: 250px;
  margin-bottom: 30px;

  @media (max-width: 768px) {
    width: 200px;
  }

  @media (max-width: 480px) {
    width: 150px;
  }
`;

const ContainerLeft = styled.div`
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 20%;
  height: 500px;
  padding: 10px;
  background: #7e5ec2;
  border-radius: 15px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  transition: box-shadow 0.3s ease;
  margin-top: 10%;
  margin-left: 25%; /* Ajustar margem para telas pequenas */

  &:hover {
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
  }

  @media (max-width: 1200px) {
    width: 25%;
    margin-left: 20px; /* Reduzir margem √† esquerda */
  }

  @media (max-width: 900px) {
    width: 40%;
    margin-left: 0;
    margin-top: 100px;
  }

  @media (max-width: 600px) {
    width: 80%;
    margin-top: 50px;
  }

  @media (max-width: 400px) {
    width: 100%;
    margin-top: 20px;
  }
`;

const EmailLabel = styled.label`
  margin-top: 20px;
  font-weight: bold;
  color: black;
`;

const PasswordLabel = styled.label`
  margin-top: 10px;
  font-weight: bold;
  color: black;
`;

const Input = styled.input`
  padding: 10px;
  margin-top: 5px;
  border: 1px solid #ccc;
  border-radius: 5px;
  font-size: 16px;
  width: 80%; /* Ocupa toda a largura dispon√≠vel */

  &:focus {
    border-color: #007bff;
    box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
    outline: none;
  }
`;

const MainContent = styled.div`
  margin-top: 30px;
  display: flex;
  justify-content: flex-end;
`;

const Button1 = styled.button`
  background-color: #007bff;
  color: white;
  border: none;
  padding: 10px 20px;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s ease;
  margin-top: 20px;

  &:hover {
    background-color: #0056b3;
  }
`;

const Button2 = styled.button`
  background-color: #28a745;
  color: white;
  border: none;
  padding: 10px 15px;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s ease;

  &:hover {
    background-color: #218838;
  }
`;

const JustifiedText = styled.p`
  font-size: 24px;
  font-weight: bold;
  color: #444;
  margin: 0;
`;

const BemVindo: React.FC = () => {
  const [email, setEmail] = useState<string>('');
  const [senha, setSenha] = useState<string>('');
  const navigate = useNavigate();

  const handleLogin = () => {
    console.log('Email:', email);
    console.log('Senha:', senha);
    navigate('/home');
  };

  return (
    <Background>
      <ContainerLeft>
        <h1>Login</h1>
        <EmailLabel>Email:</EmailLabel>
        <Input 
          type="email" 
          className="email-input" 
          value={email}
          onChange={(e) => setEmail(e.target.value)} 
        />
        <PasswordLabel>Senha:</PasswordLabel>
        <Input 
          type="password" 
          className="password-input" 
          value={senha}
          onChange={(e) => setSenha(e.target.value)} 
        />
        <MainContent>
          <Button2 onClick={handleLogin}>&gt;</Button2>
        </MainContent>
      </ContainerLeft>

      <ContainerRightTitle>
        <Logo src={logo} alt="Logo NutriTech" />
        <JustifiedText>
          O MELHOR
          <br />
          PARA A SUA
          <br />
          SA√öDE!
        </JustifiedText>
        <Button1 onClick={() => navigate('/cadastro')}>COMECE J√Å</Button1>
      </ContainerRightTitle>
    </Background>
  );
};

export default BemVindo;


TELA DE CONFIGURA√á√ÉO: modelo antigo

import React, { useState } from "react";
import styled_Configuracoes from "../styled/styled_Configuracoes";
import { useNavigate } from "react-router-dom"; // Importa o useNavigate

const {
  ContainerMenu,
  BarraNavegacao,
  Sidebar,
  SidebarContent,
  Item,
  Text,
  ContainerConfiguracoes,
  ContainerPerfil,
  ContainerNotificacoes,
  ContainerSeguranca,
  ContainerSobre,
} = styled_Configuracoes();

const Configuracoes: React.FC = () => {
  const navigate = useNavigate(); // Inicializa o useNavigate
  const [expandedIndex, setExpandedIndex] = useState<number | null>(null);

  const toggleExpand = (index: number) => {
    setExpandedIndex(expandedIndex === index ? null : index); // Alterna a expans√£o
  };

  return (
    <ContainerMenu>
      <BarraNavegacao>
        <h1>Nome do usu√°rio</h1>
      </BarraNavegacao>
      <Sidebar>
        <SidebarContent>
          <Item onClick={() => navigate("/home")}>
            <div className="icon">üè†</div>
            <Text>Home</Text>
          </Item>
          <Item onClick={() => navigate("/historico")}>
            <div className="icon">üîç</div>
            <Text>Hist√≥rico</Text>
          </Item>
          <Item onClick={() => navigate("/cardapio")}>
            <div className="icon">‚öôÔ∏è</div>
            <Text>Card√°pio</Text>
          </Item>
          <Item onClick={() => navigate("/metas")}>
            <div className="icon">‚öôÔ∏è</div>
            <Text>Metas</Text>
          </Item>
          <Item onClick={() => navigate("/configuracoes")}>
            <div className="icon">‚öôÔ∏è</div>
            <Text>Configura√ß√µes</Text>
          </Item>
        </SidebarContent>
      </Sidebar>
      <ContainerConfiguracoes>
        <ContainerPerfil>Perfil</ContainerPerfil>
        <ContainerNotificacoes>Notifica√ß√µes</ContainerNotificacoes>
        <ContainerSeguranca>Seguran√ßa</ContainerSeguranca>
        <ContainerSobre>Sobre</ContainerSobre>
      </ContainerConfiguracoes>
    </ContainerMenu>
  );
};

export default Configuracoes;
